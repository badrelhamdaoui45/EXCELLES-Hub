// src/ai/flows/generate-blog-ideas.ts
'use server';

/**
 * @fileOverview This file defines a Genkit flow for generating blog post ideas based on a given topic.
 *
 * The flow takes a topic as input and returns a list of 5 blog post titles generated by the AI.
 *
 * @interface GenerateBlogIdeasInput - Input type for the generateBlogIdeas function.
 * @interface GenerateBlogIdeasOutput - Output type for the generateBlogIdeas function.
 * @function generateBlogIdeas - The main function to trigger the blog idea generation flow.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateBlogIdeasInputSchema = z.object({
  topic: z.string().describe('The topic for which to generate blog post ideas.'),
});
export type GenerateBlogIdeasInput = z.infer<typeof GenerateBlogIdeasInputSchema>;

const GenerateBlogIdeasOutputSchema = z.object({
  ideas: z.array(z.string()).describe('A list of 5 generated blog post titles.'),
});
export type GenerateBlogIdeasOutput = z.infer<typeof GenerateBlogIdeasOutputSchema>;

export async function generateBlogIdeas(input: GenerateBlogIdeasInput): Promise<GenerateBlogIdeasOutput> {
  return generateBlogIdeasFlow(input);
}

const generateBlogIdeasPrompt = ai.definePrompt({
  name: 'generateBlogIdeasPrompt',
  input: {schema: GenerateBlogIdeasInputSchema},
  output: {schema: GenerateBlogIdeasOutputSchema},
  prompt: `You are a creative blog post title generator. Given a topic, you will generate 5 blog post titles that are engaging and relevant to the topic. 

Topic: {{{topic}}}

Blog Post Ideas:`,
});

const generateBlogIdeasFlow = ai.defineFlow(
  {
    name: 'generateBlogIdeasFlow',
    inputSchema: GenerateBlogIdeasInputSchema,
    outputSchema: GenerateBlogIdeasOutputSchema,
  },
  async input => {
    const {output} = await generateBlogIdeasPrompt(input);
    return output!;
  }
);
